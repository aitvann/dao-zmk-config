/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    closing-square {
      bindings = <&kp RIGHT_BRACKET>;
      key-positions = <19 20>;
    };

    closing-parenthesis {
      bindings = <&kp RIGHT_PARENTHESIS>;
      key-positions = <7 8>;
    };

    closing-brace {
      bindings = <&kp RIGHT_BRACE>;
      key-positions = <31 32>;
    };

    openning-square {
      bindings = <&kp LEFT_BRACKET>;
      key-positions = <16 15>;
    };

    openning-parenthesis {
      bindings = <&kp LEFT_PARENTHESIS>;
      key-positions = <3 4>;
    };

    openning-brace {
      bindings = <&kp LEFT_BRACE>;
      key-positions = <28 27>;
    };

    plus {
      bindings = <&kp PLUS>;
      key-positions = <18 19>;
    };

    minus {
      bindings = <&kp MINUS>;
      key-positions = <16 17>;
    };

    equal {
      bindings = <&kp EQUAL>;
      key-positions = <30 31>;
    };

    underscore {
      bindings = <&kp UNDERSCORE>;
      key-positions = <28 29>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P          &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMICOLON  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RSHFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
      >;
    };

    raise {
      bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3  &kp PG_UP  &trans         &trans    &trans            &trans  &trans     &trans  &kp DEL
&trans      &kp N4  &kp N5  &kp N6  &kp PG_DN  &bootloader    &kp LEFT  &kp DOWN          &kp UP  &kp RIGHT  &trans  &trans
&trans      &kp N7  &kp N8  &kp N9  &kp N0     &sys_reset     &trans    &kp LEFT_BRACKET  &kp F   &kp G      &trans  &trans
                            &trans  &trans     &trans         &trans    &mo 3             &trans
      >;
    };

    lower {
      bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET    &kp AMPS  &kp KP_MULTIPLY  &trans  &trans    &none
&kp F1  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &bootloader  &trans    &trans           &trans  &kp BSLH  &kp GRAVE
&kp F7  &kp F8    &kp F9  &kp F10   &kp F12   &kp F12      &sys_reset   &trans    &trans           &trans  &kp PIPE  &kp TILDE
                          &trans    &mo 3     &trans       &trans       &trans    &trans
      >;
    };

    both {
      bindings = <
&bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2              &bt BT_SEL 3          &bt BT_SEL 4          &trans                      &trans      &trans             &trans            &trans      &bt BT_SEL 0        &trans
&trans      &trans        &kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_MAXIMUM    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &trans      &trans              &trans
&trans      &trans        &trans                    &trans                &trans                &trans                      &trans      &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_FAST_FORWARD  &trans
                                                    &trans                &trans                &trans                      &trans      &trans             &trans
      >;
    };
  };
};
